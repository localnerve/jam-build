name: Verify
on:
  push:
    branches: [ main, stage ]
  pull_request:
    branches: [ main, stage ]

env:
  NODE_VERSION: '24.8'

jobs:
  build_cache_verify_publish:
    runs-on: ubuntu-24.04
    name: 'Build, cache deps and docker image. Verify and publish production artifacts'
    steps:
      - uses: actions/checkout@v5
      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Run Linter
        run: npm run lint
      - name: Check Production Build
        run: npm run build
      #- name: Archive Build Stats
      #  if: ${{ success() }}
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: jam-build-bundles
      #    overwrite: true
      #    compression: 9
      #    path: ./stats/
      - name: Build Docker Image
        run: npm run test:build    # builds jam-build-test:latest
      - name: Export Docker Image
        run: docker save jam-build-test:latest -o jam-build-test.tar
      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          overwrite: true
          path: jam-build-test.tar

  browser_tests:
    runs-on: ubuntu-24.04
    needs: build_cache_verify_publish
    strategy:
      fail-fast: false
      matrix:
        label: ['webkit', 'firefox', 'chromium']
    name: 'Test ${{ matrix.label }} browser'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
      - name: Load Docker Image
        run: docker load -i jam-build-test.tar
      - name: Test ${{ matrix.label }}
        run: npm run test:${{ matrix.label }}
      #- name: Archive Test Reports
      #  if: success() && matrix.label == 'chromium'
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: test-reports
      #    overwrite: true
      #    compresion: 9
      #    path: |
      #      ./test-results/coverage/coverage-mutation-tests-0/
      #      ./test-results/audits/
      #      ./coverage/
      #      !./coverage/**/tmp

  cleanup:
    runs-on: ubuntu-24.04
    needs: browser_tests
    if: always()
    steps:
      - name: Delete Test Docker Image
        uses: geekyeggo/delete-artifact@v5
        with:
          name: docker-image
          failOnError: false
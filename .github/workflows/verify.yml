name: Verify
on:
  push:
    branches: [ main, stage ]
  pull_request:
    branches: [ main, stage ]

env:
  NODE_VERSION: '24.8'
  REPORT_ARTIFACTS: false

jobs:
  build_verify:
    runs-on: ubuntu-24.04
    name: 'Build, verify, and cache'
    steps:
      - uses: actions/checkout@v5
      - name: Setup Node with npm cache
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Npm Dependencies
        run: npm ci
      - name: Cache Playwright Browser Binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - name: Install Playwright Browsers (if not cached)
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install
      - name: Install Playwright System Dependencies
        run: npx playwright install-deps
      - name: Run Linter
        run: npm run lint
      - name: Check Production Build
        run: npm run build
      - name: Archive Build Stats
        if: success() && env.REPORT_ARTIFACTS
        uses: actions/upload-artifact@v4
        with:
          name: jam-build-stats
          overwrite: true
          compression: 9
          path: ./stats/
      - name: Build Docker Image
        run: npm run test:build    # builds jam-build-test:latest
      - name: Export Docker Image
        run: docker save jam-build-test:latest -o jam-build-test.tar
      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          overwrite: true
          path: jam-build-test.tar

  browser_tests:
    needs: build_verify
    strategy:
      fail-fast: false
      matrix:
        label: ['webkit', 'firefox', 'chromium']
        os: ['ubuntu-24.04']
    runs-on: ${{ matrix.os }}
    name: 'Test ${{ matrix.label }} browser on ${{ matrix.os }}'
    steps:
      - uses: actions/checkout@v5
      - name: Setup Node with npm cache
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Npm Dependencies
        run: npm ci
      - name: Cache Playwright Browser Binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - name: Install Playwright Browsers (if not cached)
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install
      - name: Set Playwright Browser Path
        run: echo "PLAYWRIGHT_BROWSERS_PATH=$HOME/.cache/ms-playwright" >> $GITHUB_ENV
      - name: Install Playwright System Dependencies
        run: npx playwright install-deps
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
      - name: Load Docker Image
        run: docker load -i jam-build-test.tar
      - name: Test ${{ matrix.label }}
        run: npm run test:${{ matrix.label }}
      - name: Archive Test Reports
        if: success() && matrix.label == 'chromium' && env.REPORT_ARTIFACTS
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          overwrite: true
          compresion: 9
          path: |
            ./test-results/coverage/coverage-mutation-tests-0/
            ./test-results/audits/
            ./coverage/
            !./coverage/**/tmp

  cleanup:
    runs-on: ubuntu-24.04
    needs: browser_tests
    if: always()
    steps:
      - name: Delete Test Docker Image
        uses: geekyeggo/delete-artifact@v5
        with:
          name: docker-image
          failOnError: false
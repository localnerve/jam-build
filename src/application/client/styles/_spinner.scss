// -------------
// spinner.scss
//
// Jam-build, a web application practical reference.
// Copyright (c) 2025 Alex Grant <info@localnerve.com> (https://www.localnerve.com), LocalNerve LLC
// 
// This file is part of Jam-build.
// Jam-build is free software: you can redistribute it and/or modify it
// under the terms of the GNU Affero General Public License as published by the Free Software
// Foundation, either version 3 of the License, or (at your option) any later version.
// Jam-build is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU Affero General Public License for more details.
// You should have received a copy of the GNU Affero General Public License along with Jam-build.
// If not, see <https://www.gnu.org/licenses/>.
// Additional terms under GNU AGPL version 3 section 7:
// a) The reasonable legal notice of original copyright and author attribution must be preserved
//    by including the string: "Copyright (c) 2025 Alex Grant <info@localnerve.com> (https://www.localnerve.com), LocalNerve LLC"
//    in this material, copies, or source code of derived works. 
// -------------
@use 'sass:math';
@use 'sass:color';
@use 'vars' as v;
@use 'colors' as c;

$spinner-offset: 187;
$spinner-duration: 1.4s;

.spinner-el {
  display: none;
}

.spinner {
  .spinner-el {
    display: block;
    animation: spinner-rotator $spinner-duration linear infinite;

    .path {
      stroke-dasharray: $spinner-offset;
      stroke-dashoffset: 0;
      transform-origin: center;
      animation:
        spinner-dash $spinner-duration ease-in-out infinite, 
        spinner-colors ($spinner-duration * 4) ease-in-out infinite;
    }
  }
}

@keyframes spinner-rotator {
  0% {
    transform: rotate(0deg);
  }
  
  100% {
    transform: rotate(270deg);
  }
}

@keyframes spinner-colors {
	0% {
    stroke: c.$logo-red-light-alt;
  }
  
  16% {
    stroke: rgb(
      color.channel(c.$logo-red-light-alt, "red", $space: rgb),
      color.channel(c.$logo-blue-light-alt, "green", $space: rgb),
      color.channel(c.$logo-red-light-alt, "blue", $space: rgb)
    )
  }
	
  33% {
    stroke: rgb(
      color.channel(c.$logo-red-light-alt, "red", $space: rgb),
      color.channel(c.$logo-blue-light-alt, "green", $space: rgb),
      color.channel(c.$logo-blue-light-alt, "blue", $space: rgb)
    )
  }
	
  50% {
    stroke: c.$logo-blue-light-alt;
  }
	
  66% {
    stroke: rgb(
      color.channel(c.$logo-blue-light-alt, "red", $space: rgb),
      color.channel(c.$logo-red-light-alt, "green", $space: rgb),
      color.channel(c.$logo-blue-light-alt, "blue", $space: rgb)
    )
  }
  
  83% {
    stroke: rgb(
      color.channel(c.$logo-red-light-alt, "red", $space: rgb),
      color.channel(c.$logo-red-light-alt, "green", $space: rgb),
      color.channel(c.$logo-blue-light-alt, "blue", $space: rgb)
    )
  }
}

@keyframes spinner-dash {
  0% {
    stroke-dashoffset: $spinner-offset;
  }

  50% {
    stroke-dashoffset: math.div($spinner-offset, 4);
    transform: rotate(135deg);
  }
  
  100% {
    stroke-dashoffset: $spinner-offset;
    transform: rotate(450deg);
  }
}

.page-spinner {
  display: none;
  position: fixed;
  top: 0; right: 0; bottom: 0; left: 0; // stylelint-disable-line declaration-block-no-redundant-longhand-properties
  z-index: v.$z-index-spinner;
  background: rgb(34 34 34 / 50%);

  .spinner {
    width: 100%;
    height: 350px;
    position: fixed;
    z-index: v.$z-index-spinner + 1;
    top: 50%;
    transform: translate(0, -50%);
    display: flex;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: center;
  }
 
  &.show {
    display: block;
  }

  &.backstop { // just be a blocking backstop
    display: block;

    .spinner {
      display: none;
    }
  }
}

// safari zoom bug
.safari-desktop .spinner-el .path {
  // stylelint-disable-next-line declaration-property-value-keyword-no-deprecated
  zoom: reset;
}